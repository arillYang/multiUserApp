package com.xuyang.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TquotientLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public TquotientLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQlIdIsNull() {
            addCriterion("ql_id is null");
            return (Criteria) this;
        }

        public Criteria andQlIdIsNotNull() {
            addCriterion("ql_id is not null");
            return (Criteria) this;
        }

        public Criteria andQlIdEqualTo(Integer value) {
            addCriterion("ql_id =", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdNotEqualTo(Integer value) {
            addCriterion("ql_id <>", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdGreaterThan(Integer value) {
            addCriterion("ql_id >", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ql_id >=", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdLessThan(Integer value) {
            addCriterion("ql_id <", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdLessThanOrEqualTo(Integer value) {
            addCriterion("ql_id <=", value, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdIn(List<Integer> values) {
            addCriterion("ql_id in", values, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdNotIn(List<Integer> values) {
            addCriterion("ql_id not in", values, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdBetween(Integer value1, Integer value2) {
            addCriterion("ql_id between", value1, value2, "qlId");
            return (Criteria) this;
        }

        public Criteria andQlIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ql_id not between", value1, value2, "qlId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdIsNull() {
            addCriterion("quotient_id is null");
            return (Criteria) this;
        }

        public Criteria andQuotientIdIsNotNull() {
            addCriterion("quotient_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuotientIdEqualTo(Integer value) {
            addCriterion("quotient_id =", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdNotEqualTo(Integer value) {
            addCriterion("quotient_id <>", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdGreaterThan(Integer value) {
            addCriterion("quotient_id >", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("quotient_id >=", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdLessThan(Integer value) {
            addCriterion("quotient_id <", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdLessThanOrEqualTo(Integer value) {
            addCriterion("quotient_id <=", value, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdIn(List<Integer> values) {
            addCriterion("quotient_id in", values, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdNotIn(List<Integer> values) {
            addCriterion("quotient_id not in", values, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdBetween(Integer value1, Integer value2) {
            addCriterion("quotient_id between", value1, value2, "quotientId");
            return (Criteria) this;
        }

        public Criteria andQuotientIdNotBetween(Integer value1, Integer value2) {
            addCriterion("quotient_id not between", value1, value2, "quotientId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andNumbsIsNull() {
            addCriterion("numbs is null");
            return (Criteria) this;
        }

        public Criteria andNumbsIsNotNull() {
            addCriterion("numbs is not null");
            return (Criteria) this;
        }

        public Criteria andNumbsEqualTo(Integer value) {
            addCriterion("numbs =", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsNotEqualTo(Integer value) {
            addCriterion("numbs <>", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsGreaterThan(Integer value) {
            addCriterion("numbs >", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsGreaterThanOrEqualTo(Integer value) {
            addCriterion("numbs >=", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsLessThan(Integer value) {
            addCriterion("numbs <", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsLessThanOrEqualTo(Integer value) {
            addCriterion("numbs <=", value, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsIn(List<Integer> values) {
            addCriterion("numbs in", values, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsNotIn(List<Integer> values) {
            addCriterion("numbs not in", values, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsBetween(Integer value1, Integer value2) {
            addCriterion("numbs between", value1, value2, "numbs");
            return (Criteria) this;
        }

        public Criteria andNumbsNotBetween(Integer value1, Integer value2) {
            addCriterion("numbs not between", value1, value2, "numbs");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNull() {
            addCriterion("money is null");
            return (Criteria) this;
        }

        public Criteria andMoneyIsNotNull() {
            addCriterion("money is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyEqualTo(BigDecimal value) {
            addCriterion("money =", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotEqualTo(BigDecimal value) {
            addCriterion("money <>", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThan(BigDecimal value) {
            addCriterion("money >", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("money >=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThan(BigDecimal value) {
            addCriterion("money <", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("money <=", value, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyIn(List<BigDecimal> values) {
            addCriterion("money in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotIn(List<BigDecimal> values) {
            addCriterion("money not in", values, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("money between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("money not between", value1, value2, "money");
            return (Criteria) this;
        }

        public Criteria andCommisionIsNull() {
            addCriterion("commision is null");
            return (Criteria) this;
        }

        public Criteria andCommisionIsNotNull() {
            addCriterion("commision is not null");
            return (Criteria) this;
        }

        public Criteria andCommisionEqualTo(BigDecimal value) {
            addCriterion("commision =", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionNotEqualTo(BigDecimal value) {
            addCriterion("commision <>", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionGreaterThan(BigDecimal value) {
            addCriterion("commision >", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("commision >=", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionLessThan(BigDecimal value) {
            addCriterion("commision <", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("commision <=", value, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionIn(List<BigDecimal> values) {
            addCriterion("commision in", values, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionNotIn(List<BigDecimal> values) {
            addCriterion("commision not in", values, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("commision between", value1, value2, "commision");
            return (Criteria) this;
        }

        public Criteria andCommisionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("commision not between", value1, value2, "commision");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_quotient_log
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_quotient_log
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}