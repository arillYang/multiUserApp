package com.xuyang.model;

import java.util.ArrayList;
import java.util.List;

public class TgimageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public TgimageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGimageIdIsNull() {
            addCriterion("gimage_id is null");
            return (Criteria) this;
        }

        public Criteria andGimageIdIsNotNull() {
            addCriterion("gimage_id is not null");
            return (Criteria) this;
        }

        public Criteria andGimageIdEqualTo(Integer value) {
            addCriterion("gimage_id =", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdNotEqualTo(Integer value) {
            addCriterion("gimage_id <>", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdGreaterThan(Integer value) {
            addCriterion("gimage_id >", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("gimage_id >=", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdLessThan(Integer value) {
            addCriterion("gimage_id <", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdLessThanOrEqualTo(Integer value) {
            addCriterion("gimage_id <=", value, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdIn(List<Integer> values) {
            addCriterion("gimage_id in", values, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdNotIn(List<Integer> values) {
            addCriterion("gimage_id not in", values, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdBetween(Integer value1, Integer value2) {
            addCriterion("gimage_id between", value1, value2, "gimageId");
            return (Criteria) this;
        }

        public Criteria andGimageIdNotBetween(Integer value1, Integer value2) {
            addCriterion("gimage_id not between", value1, value2, "gimageId");
            return (Criteria) this;
        }

        public Criteria andImageParameterIsNull() {
            addCriterion("image_parameter is null");
            return (Criteria) this;
        }

        public Criteria andImageParameterIsNotNull() {
            addCriterion("image_parameter is not null");
            return (Criteria) this;
        }

        public Criteria andImageParameterEqualTo(String value) {
            addCriterion("image_parameter =", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterNotEqualTo(String value) {
            addCriterion("image_parameter <>", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterGreaterThan(String value) {
            addCriterion("image_parameter >", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterGreaterThanOrEqualTo(String value) {
            addCriterion("image_parameter >=", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterLessThan(String value) {
            addCriterion("image_parameter <", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterLessThanOrEqualTo(String value) {
            addCriterion("image_parameter <=", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterLike(String value) {
            addCriterion("image_parameter like", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterNotLike(String value) {
            addCriterion("image_parameter not like", value, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterIn(List<String> values) {
            addCriterion("image_parameter in", values, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterNotIn(List<String> values) {
            addCriterion("image_parameter not in", values, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterBetween(String value1, String value2) {
            addCriterion("image_parameter between", value1, value2, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageParameterNotBetween(String value1, String value2) {
            addCriterion("image_parameter not between", value1, value2, "imageParameter");
            return (Criteria) this;
        }

        public Criteria andImageDetailsIsNull() {
            addCriterion("image_details is null");
            return (Criteria) this;
        }

        public Criteria andImageDetailsIsNotNull() {
            addCriterion("image_details is not null");
            return (Criteria) this;
        }

        public Criteria andImageDetailsEqualTo(String value) {
            addCriterion("image_details =", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsNotEqualTo(String value) {
            addCriterion("image_details <>", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsGreaterThan(String value) {
            addCriterion("image_details >", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsGreaterThanOrEqualTo(String value) {
            addCriterion("image_details >=", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsLessThan(String value) {
            addCriterion("image_details <", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsLessThanOrEqualTo(String value) {
            addCriterion("image_details <=", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsLike(String value) {
            addCriterion("image_details like", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsNotLike(String value) {
            addCriterion("image_details not like", value, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsIn(List<String> values) {
            addCriterion("image_details in", values, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsNotIn(List<String> values) {
            addCriterion("image_details not in", values, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsBetween(String value1, String value2) {
            addCriterion("image_details between", value1, value2, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andImageDetailsNotBetween(String value1, String value2) {
            addCriterion("image_details not between", value1, value2, "imageDetails");
            return (Criteria) this;
        }

        public Criteria andGIdIsNull() {
            addCriterion("g_id is null");
            return (Criteria) this;
        }

        public Criteria andGIdIsNotNull() {
            addCriterion("g_id is not null");
            return (Criteria) this;
        }

        public Criteria andGIdEqualTo(Integer value) {
            addCriterion("g_id =", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdNotEqualTo(Integer value) {
            addCriterion("g_id <>", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdGreaterThan(Integer value) {
            addCriterion("g_id >", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("g_id >=", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdLessThan(Integer value) {
            addCriterion("g_id <", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdLessThanOrEqualTo(Integer value) {
            addCriterion("g_id <=", value, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdIn(List<Integer> values) {
            addCriterion("g_id in", values, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdNotIn(List<Integer> values) {
            addCriterion("g_id not in", values, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdBetween(Integer value1, Integer value2) {
            addCriterion("g_id between", value1, value2, "gId");
            return (Criteria) this;
        }

        public Criteria andGIdNotBetween(Integer value1, Integer value2) {
            addCriterion("g_id not between", value1, value2, "gId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_gimage
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_gimage
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}