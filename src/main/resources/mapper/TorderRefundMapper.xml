<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xuyang.mapper.TorderRefundMapper">
  <resultMap id="BaseResultMap" type="com.xuyang.model.TorderRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ore_id" jdbcType="INTEGER" property="oreId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="refund_remark" jdbcType="VARCHAR" property="refundRemark" />
    <result column="refund_state" jdbcType="VARCHAR" property="refundState" />
    <result column="state_reason" jdbcType="VARCHAR" property="stateReason" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="admin_name" jdbcType="VARCHAR" property="adminName" />
    <result column="handle_result" jdbcType="VARCHAR" property="handleResult" />
    <result column="handle_time" jdbcType="TIMESTAMP" property="handleTime" />
    <result column="handle_remark" jdbcType="VARCHAR" property="handleRemark" />
    <result column="refund_money" jdbcType="DECIMAL" property="refundMoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ore_id, order_id, user_id, refund_remark, refund_state, state_reason, create_time, 
    admin_name, handle_result, handle_time, handle_remark, refund_money
  </sql>
  <select id="selectByExample" parameterType="com.xuyang.model.TorderRefundExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_order_refund
    where ore_id = #{oreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_order_refund
    where ore_id = #{oreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xuyang.model.TorderRefundExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xuyang.model.TorderRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_order_refund (ore_id, order_id, user_id, 
      refund_remark, refund_state, state_reason, 
      create_time, admin_name, handle_result, 
      handle_time, handle_remark, refund_money
      )
    values (#{oreId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{refundRemark,jdbcType=VARCHAR}, #{refundState,jdbcType=VARCHAR}, #{stateReason,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{adminName,jdbcType=VARCHAR}, #{handleResult,jdbcType=VARCHAR}, 
      #{handleTime,jdbcType=TIMESTAMP}, #{handleRemark,jdbcType=VARCHAR}, #{refundMoney,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xuyang.model.TorderRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_order_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oreId != null">
        ore_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="refundRemark != null">
        refund_remark,
      </if>
      <if test="refundState != null">
        refund_state,
      </if>
      <if test="stateReason != null">
        state_reason,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="adminName != null">
        admin_name,
      </if>
      <if test="handleResult != null">
        handle_result,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="handleRemark != null">
        handle_remark,
      </if>
      <if test="refundMoney != null">
        refund_money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oreId != null">
        #{oreId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="refundRemark != null">
        #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundState != null">
        #{refundState,jdbcType=VARCHAR},
      </if>
      <if test="stateReason != null">
        #{stateReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adminName != null">
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="handleResult != null">
        #{handleResult,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleRemark != null">
        #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundMoney != null">
        #{refundMoney,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xuyang.model.TorderRefundExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from t_order_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_order_refund
    <set>
      <if test="record.oreId != null">
        ore_id = #{record.oreId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.refundRemark != null">
        refund_remark = #{record.refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.refundState != null">
        refund_state = #{record.refundState,jdbcType=VARCHAR},
      </if>
      <if test="record.stateReason != null">
        state_reason = #{record.stateReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adminName != null">
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.handleResult != null">
        handle_result = #{record.handleResult,jdbcType=VARCHAR},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handleRemark != null">
        handle_remark = #{record.handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.refundMoney != null">
        refund_money = #{record.refundMoney,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_order_refund
    set ore_id = #{record.oreId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      refund_remark = #{record.refundRemark,jdbcType=VARCHAR},
      refund_state = #{record.refundState,jdbcType=VARCHAR},
      state_reason = #{record.stateReason,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      handle_result = #{record.handleResult,jdbcType=VARCHAR},
      handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
      handle_remark = #{record.handleRemark,jdbcType=VARCHAR},
      refund_money = #{record.refundMoney,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuyang.model.TorderRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_order_refund
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="refundRemark != null">
        refund_remark = #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundState != null">
        refund_state = #{refundState,jdbcType=VARCHAR},
      </if>
      <if test="stateReason != null">
        state_reason = #{stateReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adminName != null">
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="handleResult != null">
        handle_result = #{handleResult,jdbcType=VARCHAR},
      </if>
      <if test="handleTime != null">
        handle_time = #{handleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="handleRemark != null">
        handle_remark = #{handleRemark,jdbcType=VARCHAR},
      </if>
      <if test="refundMoney != null">
        refund_money = #{refundMoney,jdbcType=DECIMAL},
      </if>
    </set>
    where ore_id = #{oreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuyang.model.TorderRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_order_refund
    set order_id = #{orderId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      refund_remark = #{refundRemark,jdbcType=VARCHAR},
      refund_state = #{refundState,jdbcType=VARCHAR},
      state_reason = #{stateReason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      admin_name = #{adminName,jdbcType=VARCHAR},
      handle_result = #{handleResult,jdbcType=VARCHAR},
      handle_time = #{handleTime,jdbcType=TIMESTAMP},
      handle_remark = #{handleRemark,jdbcType=VARCHAR},
      refund_money = #{refundMoney,jdbcType=DECIMAL}
    where ore_id = #{oreId,jdbcType=INTEGER}
  </update>
</mapper>